//*--------------------------------------------------------------------------------------
//# Colors
//------------------------------------------------------------------------------------- */
@use "sass:map";

//*--------------------------------------------------------------------------------------
//  Set default text and link colors depending on how dark or light the background
//  color is. 
//--------------------------------------------------------------------------------------*/

// When a color is used as a background, default the text to these colors based on
// lightness.
$contrast-colors: (
	"base": var(--wp--preset--color--contrast),
	"contrast": var(--wp--preset--color--base),
	"default-black": var(--wp--preset--color--foreground-alt),
	"default-dark": var(--wp--preset--color--foreground-alt),
	"default-medium": var(--wp--preset--color--foreground-alt),
	"default-light": var(--wp--preset--color--contrast),
	"default-white": var(--wp--preset--color--contrast)
);

// When a color is used as a background, default the link color to these base on 
// lightness.
$highlight-colors: (
	"base": inherit,
	"contrast": inherit,
	"default-black": var(--wp--preset--color--highlight),
	"default-dark": inherit,
	"default-medium": inherit,
	"default-light": inherit,
	"default-white": var(--wp--preset--color--highlight),
);

// Mixin to default colors
@mixin color-defaults(
	$colors,
	$lightness 
) {
	@each $color in $colors {
	
		$contrast: map.get($contrast-colors, $lightness);
		$highlight: map.get($highlight-colors, $lightness);
		
		@if $contrast {
			.has-#{$color}-background-color {
				color: var(--wp--custom--color--contrast--#{$color}, var(--wp--custom--color--contrast--#{$lightness}, #{$contrast}));
				
				@if $highlight {			
					& a:not(.wp-element-button) {
						color: var(--wp--custom--color--highlight--#{$color}, var(--wp--custom--color--highlight--#{$lightness}, #{$highlight}));
					}
					
					& a:not(.wp-element-button):not(.wp-block-navigation-item__content) {
							text-decoration: var(--wp--custom--color--underline--#{$color}, var(--wp--custom--color--underline--#{$lightness}, var(--wp--custom--color--underline--default, none)));
					}
				}
			}
		}
	}
}

//*--------------------------------------------------------------------------------------
//# Vendor Prefixes
//--------------------------------------------------------------------------------------*/

$vendor-prefixes: ('-webkit-', '');

@mixin vendor-prefix($name, $value) {
	@each $vendor in $vendor-prefixes {
		#{$vendor}#{$name}: #{$value};
	}
}

@mixin keyframes($animationName) {
	@each $vendor in $vendor-prefixes {
		@#{$vendor}keyframes #{$animationName} {
			$browser: #{$vendor} !global;
			@content;
		}
	}
} $browser: null;
